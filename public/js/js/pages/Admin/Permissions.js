import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useEffect } from "react";
import Apple from "../../components/Layouts/Apple";
// import DataTable from "react-data-table-component";
import { Card } from "reactstrap";
import appAccessPermission from "../../../@scripts/js/app-access-permission";
import modalAddPermission from "../../../@scripts/js/modal-add-permission";
import modalEditPermission from "../../../@scripts/js/modal-edit-permission";
const Permissions = () => {
    const handleSubmit = (event) => {
        // Prevent the form from submitting
        event.preventDefault();
        return false;
    };
    useEffect(() => {
        appAccessPermission();
        modalAddPermission();
        modalEditPermission();
    }, []);
    return (_jsx(Apple, { children: _jsxs("div", { className: "container-xxl flex-grow-1 container-p-y", children: [_jsx("h3", { children: "Permissions List" }), _jsx("p", { children: "Each category (Basic, Professional, and Business) includes the four predefined roles shown below." }), _jsxs(_Fragment, { children: [_jsx(Card, { children: _jsx("div", { className: "card-datatable table-responsive", children: _jsx("table", { className: "datatables-permissions table border-top", children: _jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", {}), _jsx("th", {}), _jsx("th", { children: "Name" }), _jsx("th", { children: "Assigned To" }), _jsx("th", { children: "Created Date" }), _jsx("th", { children: "Actions" })] }) }) }) }) }), _jsx("div", { className: "modal fade", id: "addPermissionModal", tabIndex: -1, "aria-hidden": "true", children: _jsx("div", { className: "modal-dialog modal-dialog-centered", children: _jsxs("div", { className: "modal-content p-3 p-md-5", children: [_jsx("button", { type: "button", className: "btn-close btn-pinned", "data-bs-dismiss": "modal", "aria-label": "Close" }), _jsxs("div", { className: "modal-body", children: [_jsxs("div", { className: "text-center mb-4", children: [_jsx("h3", { className: "mb-2", children: "Add New Permission" }), _jsx("p", { className: "text-muted", children: "Permissions you may use and assign to your users." })] }), _jsxs("form", { id: "addPermissionForm", className: "row", onSubmit: handleSubmit, children: [_jsxs("div", { className: "col-12 mb-3", children: [_jsx("label", { className: "form-label", htmlFor: "modalPermissionName", children: "Permission Name" }), _jsx("input", { type: "text", id: "modalPermissionName", name: "modalPermissionName", className: "form-control", placeholder: "Permission Name", autoFocus: true })] }), _jsx("div", { className: "col-12 mb-2", children: _jsxs("div", { className: "form-check", children: [_jsx("input", { className: "form-check-input", type: "checkbox", id: "corePermission" }), _jsx("label", { className: "form-check-label", htmlFor: "corePermission", children: " Set as core permission " })] }) }), _jsxs("div", { className: "col-12 text-center demo-vertical-spacing", children: [_jsx("button", { type: "submit", className: "btn btn-primary me-sm-3 me-1", children: "Create Permission" }), _jsx("button", { type: "reset", className: "btn btn-label-secondary", "data-bs-dismiss": "modal", "aria-label": "Close", children: "Discard" })] })] })] })] }) }) }), _jsx("div", { className: "modal fade", id: "editPermissionModal", tabIndex: -1, "aria-hidden": "true", children: _jsx("div", { className: "modal-dialog modal-dialog-centered", children: _jsxs("div", { className: "modal-content p-3 p-md-5", children: [_jsx("button", { type: "button", className: "btn-close btn-pinned", "data-bs-dismiss": "modal", "aria-label": "Close" }), _jsxs("div", { className: "modal-body", children: [_jsxs("div", { className: "text-center mb-4", children: [_jsx("h3", { className: "mb-2", children: "Edit Permission" }), _jsx("p", { className: "text-muted", children: "Edit permission as per your requirements." })] }), _jsxs("div", { className: "alert alert-warning", role: "alert", children: [_jsx("h6", { className: "alert-heading mb-2", children: "Warning" }), _jsx("p", { className: "mb-0", children: "By editing the permission name, you might break the system permissions functionality. Please ensure you're absolutely certain before proceeding." })] }), _jsxs("form", { id: "editPermissionForm", className: "row", onSubmit: handleSubmit, children: [_jsxs("div", { className: "col-sm-9", children: [_jsx("label", { className: "form-label", htmlFor: "editPermissionName", children: "Permission Name" }), _jsx("input", { type: "text", id: "editPermissionName", name: "editPermissionName", className: "form-control", placeholder: "Permission Name", tabIndex: -1 })] }), _jsxs("div", { className: "col-sm-3 mb-3", children: [_jsx("label", { className: "form-label invisible d-none d-sm-inline-block", children: "Button" }), _jsx("button", { type: "submit", className: "btn btn-primary mt-1 mt-sm-0", children: "Update" })] }), _jsx("div", { className: "col-12", children: _jsxs("div", { className: "form-check", children: [_jsx("input", { className: "form-check-input", type: "checkbox", id: "editCorePermission" }), _jsx("label", { className: "form-check-label", htmlFor: "editCorePermission", children: " Set as core permission " })] }) })] })] })] }) }) })] })] }) }));
};
export default Permissions;
//# sourceMappingURL=Permissions.js.map